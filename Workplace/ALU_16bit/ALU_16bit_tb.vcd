$date
	Wed Jan 29 21:26:12 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_16bit $end
$var wire 1 ! ain $end
$var wire 16 " buswires [15:0] $end
$var wire 1 # clk $end
$var wire 1 $ gin $end
$var wire 1 % sub $end
$var wire 16 & result [15:0] $end
$var wire 16 ' raout [15:0] $end
$var wire 16 ( aluout [15:0] $end
$scope module addsub $end
$var wire 16 ) b_xor_sub [15:0] $end
$var wire 16 * buswires_A [15:0] $end
$var wire 1 + carry_in $end
$var wire 1 % sub $end
$var wire 16 , result [15:0] $end
$var wire 16 - raout [15:0] $end
$upscope $end
$scope module reg_a $end
$var wire 16 . buswires [15:0] $end
$var wire 1 # clk $end
$var wire 1 ! rin $end
$var reg 16 / Rout [15:0] $end
$upscope $end
$scope module reg_g $end
$var wire 16 0 buswires [15:0] $end
$var wire 1 # clk $end
$var wire 1 $ rin $end
$var reg 16 1 Rout [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
bx 0
bx /
b1111111111111111 .
bx -
bx ,
0+
b1111111111111111 *
b1111111111111111 )
bx (
bx '
bx &
0%
0$
1#
b1111111111111111 "
1!
$end
#10000
0#
#20000
b1000100010001 )
1$
b1000100010001 "
b1000100010001 *
b1000100010001 .
0!
b1000100010000 &
b1000100010000 ,
b1000100010000 0
b1111111111111111 '
b1111111111111111 -
b1111111111111111 /
1#
#30000
0#
#40000
0$
b1000100010000 (
b1000100010000 1
1#
#41000
b1111111111111110 &
b1111111111111110 ,
b1111111111111110 0
b1111111111111111 )
b1111111111111111 "
b1111111111111111 *
b1111111111111111 .
#50000
0#
#60000
b0 )
1!
b0 &
b0 ,
b0 0
1+
1%
1#
#70000
0#
#80000
b1110111011101110 &
b1110111011101110 ,
b1110111011101110 0
b1110111011101110 )
1$
b1000100010001 "
b1000100010001 *
b1000100010001 .
0!
1#
#90000
0#
#100000
0$
b1110111011101110 (
b1110111011101110 1
1#
#101001
